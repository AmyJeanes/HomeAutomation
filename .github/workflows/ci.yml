name: CI
on:
  push:
    branches:
    - main
    - renovate/*
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      skipBuild:
        description: 'Skip Build (deploy only)'
        required: true
        default: 'false'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
    
    - name: Build Docker image
      run: docker build -f HomeAutomation.Web/Dockerfile -t $DOCKER_USERNAME/homeautomation.web:latest .
      env:
        DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      if: github.event.inputs.skipBuild != 'true'

    - name: Push Docker images
      run: |
        echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
        docker push $DOCKER_USERNAME/homeautomation.web:latest
      env:
        DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      if: github.ref == 'refs/heads/main' && github.event.inputs.skipBuild != 'true'
  deploy:
    if: github.ref == 'refs/heads/main'
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
    
    - name: Connect to Kubernetes
      uses: AmyJeanes/Abyss-Infrastructure/.github/actions/connect-k8s@main
      with:
        kubeconfig: "${{ secrets.KUBECONFIG }}"
        hostname: "${{ vars.KUBERNETES_API_HOSTNAME }}"
        serviceTokenId: ${{ vars.CLOUDFLARE_TUNNEL_SERVICE_TOKEN_ID }}
        serviceTokenSecret: ${{ secrets.CLOUDFLARE_TUNNEL_SERVICE_TOKEN_SECRET }}
        
    - name: Install Home Automation
      run: |
        helm upgrade --install --wait --atomic --debug --timeout 10m0s \
          homeautomation ./homeautomation \
          --namespace default \
          --set ingress.host="${{ vars.HOST }}" \
          --set env.secret.Key="${{ secrets.KEY }}" \
          --set env.secret.Mqtt__Password="${{ secrets.MQTT_PASSWORD }}" \
          --set env.normal.Mqtt__Server="${{ vars.MQTT_SERVER }}" \
          --set env.normal.Mqtt__Username="${{ vars.MQTT_USERNAME }}"
      working-directory: charts

    - name: Wait for certificate to be ready
      uses: AmyJeanes/Abyss-Infrastructure/.github/actions/wait-kube-certificate@main
      with:
        name: "homeautomation-tls"

    - name: Disconnect from Kubernetes
      if: always()
      uses: AmyJeanes/Abyss-Infrastructure/.github/actions/disconnect-k8s@main
